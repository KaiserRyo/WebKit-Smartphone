#
# qmake configuration for olympia-armcc
#
# Written for MINGW
#

MAKEFILE_GENERATOR      = MINGW
TEMPLATE                = app
CONFIG                 += warn_on release link_prl copy_dir_files debug_and_release debug_and_release_target precompile_header
QT                      =
DEFINES                += UNICODE OLYMPIA QT_LARGEFILE_SUPPORT

QMAKE_CC                = armcc
QMAKE_LEX               = flex
QMAKE_LEXFLAGS          =
QMAKE_YACC              = byacc
QMAKE_YACCFLAGS         = -d
QMAKE_CFLAGS            = --apcs /interwork --fpmode=ieee_no_fenv --no_parse_templates --gnu --diag_suppress=111,185,1201,1293,1300,611,368,997 --cpu xscale
QMAKE_CFLAGS_WARN_ON    =
QMAKE_CFLAGS_WARN_OFF   = -W
QMAKE_CFLAGS_RELEASE    = -O2 -OTime
QMAKE_CFLAGS_DEBUG      = -g --no_debug_macros --remove_unneeded_entities -O0 --no_inline
QMAKE_CFLAGS_YACC       =
QMAKE_CFLAGS_LTCG       =

QMAKE_CXX               = $$QMAKE_CC --cpp
QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS
QMAKE_CXXFLAGS_WARN_ON  = $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF = $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE  = $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG    = $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_YACC     = $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_LTCG     = $$QMAKE_CFLAGS_LTCG
QMAKE_CXXFLAGS_STL_ON   =
QMAKE_CXXFLAGS_STL_OFF  =
QMAKE_CXXFLAGS_RTTI_ON  = --no_rtti
QMAKE_CXXFLAGS_RTTI_OFF = --no_rtti
QMAKE_CXXFLAGS_EXCEPTIONS_ON =
QMAKE_CXXFLAGS_EXCEPTIONS_OFF =

DEFINES += USER_PROCESSES _AEABI_PORTABILITY_LEVEL=0 __DEFAULT_AEABI_PORTABILITY_LEVEL=0
INCLUDEPATH = $(OSNDKDIR)/inc/ \
              $(OSNDKDIR)/inc/graphics/ \
              $(OSNDKDIR)/inc/internal
QMAKE_INCDIR =

QMAKE_INCDIR_QT         = $$[QT_INSTALL_HEADERS]
QMAKE_LIBDIR_QT         = $$[QT_INSTALL_LIBS]

QMAKE_RUN_CC            = $(CC) -c $(CFLAGS) $(INCPATH) -o $obj $src
QMAKE_RUN_CC_IMP        = $(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<
QMAKE_RUN_CC_IMP_BATCH  = $(CC) -c $(CFLAGS) $(INCPATH) -o $@ @<<
QMAKE_RUN_CXX           = $(CXX) -c $(CXXFLAGS) $(INCPATH) -o $obj $src
QMAKE_RUN_CXX_IMP       = $(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<
QMAKE_RUN_CXX_IMP_BATCH = $(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ @<<

QMAKE_LINK              = true
QMAKE_LFLAGS            =
QMAKE_LFLAGS_RELEASE    =
QMAKE_LFLAGS_DEBUG      =
QMAKE_LFLAGS_CONSOLE    =
QMAKE_LFLAGS_WINDOWS    =
QMAKE_LFLAGS_DLL        =
QMAKE_LFLAGS_LTCG       =


QMAKE_LIBS_CORE         =
QMAKE_LIBS_GUI          =
QMAKE_LIBS_NETWORK      =
QMAKE_LIBS_OPENGL       =
QMAKE_LIBS_COMPAT       =

QMAKE_DIR_SEP           = /
QMAKE_COPY              = cp
QMAKE_COPY_DIR          = cp -a
QMAKE_MOVE              = mv
QMAKE_DEL_FILE          = rm -f
QMAKE_MKDIR             = mkdir
QMAKE_DEL_DIR           = rmdir
QMAKE_CHK_DIR_EXISTS    = test -d

QMAKE_MOC               = moc.exe
QMAKE_UIC               = uic.exe
QMAKE_IDC               = idc.exe

QMAKE_IDL               = midl
QMAKE_LIB               = lib /NOLOGO
QMAKE_RC                = true
QMAKE_ZIP               = zip -r -9
QMAKE_AR                = true

QT_BUILD_TREE           = $$(QTDIR)
PLATFORM_RIM            = xscale

load(qt_config)
